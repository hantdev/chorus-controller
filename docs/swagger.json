{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A control plane for Chorus Worker that manages S3 replication jobs",
        "title": "Chorus Controller API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/",
    "paths": {
        "/buckets": {
            "get": {
                "description": "Returns a list of buckets that can be used for replication jobs between specified storages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "List buckets available for replication",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User identifier",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Source storage name",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Destination storage name",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to show already replicated buckets",
                        "name": "show_replicated",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the health status of the controller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/replications": {
            "get": {
                "description": "Returns a list of all configured replication jobs with their statuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "List all replication jobs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Configures a new replication job for specified buckets between storages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "Create a new replication job",
                "parameters": [
                    {
                        "description": "Replication configuration",
                        "name": "replication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateReplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Replication job created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a replication job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "Delete a replication job",
                "parameters": [
                    {
                        "description": "Replication identifier",
                        "name": "replication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ReplicationIdentifier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Replication deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/replications/pause": {
            "post": {
                "description": "Pauses an active replication job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "Pause a replication job",
                "parameters": [
                    {
                        "description": "Replication identifier",
                        "name": "replication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ReplicationIdentifier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Replication paused successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/replications/resume": {
            "post": {
                "description": "Resumes a paused replication job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "Resume a paused replication job",
                "parameters": [
                    {
                        "description": "Replication identifier",
                        "name": "replication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ReplicationIdentifier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Replication resumed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/replications/switch/zero-downtime": {
            "post": {
                "description": "Switches main and follower buckets for a replication job without blocking writes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "Switch main and follower buckets without downtime",
                "parameters": [
                    {
                        "description": "Replication identifier",
                        "name": "replication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ReplicationIdentifier"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Switch initiated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/storages": {
            "get": {
                "description": "Returns a list of all configured storage backends",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storages"
                ],
                "summary": "List all storages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a storage with simplified parameters. All other settings use default values.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storages"
                ],
                "summary": "Create a storage configuration",
                "parameters": [
                    {
                        "description": "Storage creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateStorageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Storage created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/storages/db": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storages"
                ],
                "summary": "List storages from DB",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Storage"
                            }
                        }
                    }
                }
            }
        },
        "/storages/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storages"
                ],
                "summary": "Get storage by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Storage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Storage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing storage with new parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storages"
                ],
                "summary": "Update a storage configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Storage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Storage update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateStorageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Storage updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a storage and all its credentials",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storages"
                ],
                "summary": "Delete a storage configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Storage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Storage deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.CreateReplicationRequest": {
            "type": "object",
            "required": [
                "from",
                "to",
                "user"
            ],
            "properties": {
                "agent_url": {
                    "type": "string"
                },
                "buckets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "to_bucket": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "domain.CreateStorageRequest": {
            "type": "object",
            "required": [
                "access_key",
                "address",
                "name",
                "provider",
                "secret_key",
                "user"
            ],
            "properties": {
                "access_key": {
                    "type": "string",
                    "example": "AKIA123"
                },
                "address": {
                    "type": "string",
                    "example": "http://localhost:9000"
                },
                "name": {
                    "type": "string",
                    "example": "my-storage"
                },
                "provider": {
                    "type": "string",
                    "example": "minio"
                },
                "secret_key": {
                    "type": "string",
                    "example": "SECRET123"
                },
                "user": {
                    "type": "string",
                    "example": "myuser"
                }
            }
        },
        "domain.ReplicationIdentifier": {
            "type": "object",
            "required": [
                "bucket",
                "from",
                "to",
                "user"
            ],
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "to_bucket": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "domain.Storage": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.StorageCredential"
                    }
                },
                "default_region": {
                    "type": "string"
                },
                "health_check_interval_ms": {
                    "type": "integer"
                },
                "http_timeout_ms": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_main": {
                    "type": "boolean"
                },
                "is_secure": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "rate_limit_enabled": {
                    "type": "boolean"
                },
                "rate_limit_rpm": {
                    "type": "integer"
                }
            }
        },
        "domain.StorageCredential": {
            "type": "object",
            "properties": {
                "access_key_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "secret_access_key": {
                    "type": "string"
                },
                "storage_id": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        }
    }
}